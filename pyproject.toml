[tool.poetry]
name = "cleanarchitecturebaseexample"
version = "0.1.0"
description = "Base for implement clean architecture in python"
authors = ["Cristian Galvis <cjgalvisc@unal.edu.co>"]

[tool.poetry.dependencies]
python = "^3.9"
Flask = "^2.0.3"
SQLAlchemy = "^1.4.31"
psycopg2-binary = "^2.9.3"
pydantic = "^1.9.0"
pymongo = "^4.0.2"
gunicorn = "^20.1.0"
alembic = "^1.7.6"

[tool.poetry.dev-dependencies]
isort = "^5.10.1"
pytest = "^7.0.1"
black = "^22.1.0"
flake8 = "^4.0.1"
pre-commit = "^2.17.0"
flakehell = "^0.9.0"
Faker = "^13.0.0"
pytest-flask = "^1.2.0"
pytest-cov = "^3.0.0"
docker-compose = "^1.29.2"
coverage = "^6.3.2"


[tool.isort]
use_parentheses = true
reverse_relative = true
include_trailing_comma = true
lines_between_types = 0
multi_line_output = 3
line_length = 79

[tool.black]
target-version = ["py39"]
include = '\.pyi?$'
line-length = 79

[tool.flakehell]
max_line_length = 79
max-complexity = 18
show_source = true

[tool.flakehell.plugins]
# include everything in pyflakes except F401
pyflakes = ["+*", "-F401"]

[tool.pytest.ini_options]
minversion = 2.0
norecursedirs = [".git", ".tox", "requirements*"]
python_files = ["test*.py"]
markers = ["integration: integration tests"]

[tool.coverage.run]
include=[
    "./application_cli/*",
    "./application_api/*",
    "./rentomatic/*",
]
disable_warnings=["include-ignored"]

[tool.coverage.report]
show_missing=true
include=[
    "./application_cli/*",
    "./application_api/*",
    "./rentomatic/*",
]
sort="-Miss"
precision=2

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
