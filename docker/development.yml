version: '3.8'

services:
  db:
    container_name: db 
    image: postgres    
    env_file:
      - ../.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
  web:
    container_name: web 
    build:
      context: ${PWD}
      dockerfile: docker/web/Dockerfile.development
    env_file:
      - ../.env
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_CONFIG: ${FLASK_CONFIG}
      APPLICATION_DB: ${APPLICATION_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    entrypoint: [ 
      "python", "-m", "debugpy", "--listen", "127.0.0.1:5678", "-m", "debugger",  "--wait-for-client", "--multiprocess", "-m",
      "flask", "run", "-h", "127.0.0.1", "-p", "5000"
    ]
    ports:
      - 5000:5000
      - 5678:5678
    volumes:
      - ./src:/code/src:z
      - ${PWD}/debugger.py:/code/debugger.py
    depends_on:
      - db 
    restart: on-failure
volumes:
  pgdata:
